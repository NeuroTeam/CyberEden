@startuml

title __WORLD's Class Diagram__\n

  package com.dekinci.eden {
    package com.dekinci.eden.model {
      package com.dekinci.eden.model.world {
        class Cell {
            + Cell()
            + add()
            + contains()
            + isActive()
            + isFull()
            + remove()
            + getOther()
            + toString()
            + iterator()
        }
      }
    }
  }
  

  package com.dekinci.eden {
    package com.dekinci.eden.model {
      package com.dekinci.eden.model.world {
        class Chunk {
            {static} + SIZE : int
            - blocks : byte[]
            {static} + generate()
            # Chunk()
            + getBlock()
            + setBlock()
            # getPos()
        }
      }
    }
  }
  

  package com.dekinci.eden {
    package com.dekinci.eden.model {
      package com.dekinci.eden.model.world {
        class Coordinate {
            - x : int
            - y : int
            {static} + srightTo()
            {static} + sleftTo()
            {static} + supTo()
            {static} + sdownTo()
            + Coordinate()
            + isInRectangle()
            + rightTo()
            + leftTo()
            + upTo()
            + downTo()
            + upRightTo()
            + upLeftTo()
            + downRightTo()
            + downLeftTo()
            + randomAround()
            + getX()
            + getY()
            + setX()
            + setY()
            + hypotenuse()
            + relativeTo()
            + equals()
            + toString()
            + hashCode()
            {static} + foreachInRectangle()
            {static} + foreachInRectangle()
            {static} + random()
        }
      }
    }
  }
  

  package com.dekinci.eden {
    package com.dekinci.eden.model {
      package com.dekinci.eden.model.world {
        class Spiral {
            {static} + nextCoordinate()
        }
      }
    }
  }
  

  package com.dekinci.eden {
    package com.dekinci.eden.model {
      package com.dekinci.eden.model.world {
        class WorldMap {
            - chunkMap : Map<Integer, Chunk>
            - sizeInBlocks : AtomicInteger
            + WorldMap()
            + toString()
            + get()
            + getSizeInBlocks()
            + isBlock()
            + set()
            + getChunkId()
            + toImage()
        }
      }
    }
  }
  

  Cell -up-|> Iterable
  Cell o-- Animal : a1
  Cell o-- Animal : a2


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
